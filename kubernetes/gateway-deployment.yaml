apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  replicas: {{ .Values.replicas.gateway }} # Nombre de pods configurables
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
      - name: gateway
        image: "{{ .Values.image.gateway }}" # Image Docker configurable
        ports:
        - containerPort: 5000
        env:
        - name: CLASSES_SERVICE_URL
          value: "{{ .Values.services.classes }}"
        - name: COURS_SERVICE_URL
          value: "{{ .Values.services.cours }}"
        - name: ETUDIANTS_SERVICE_URL
          value: "{{ .Values.services.etudiants }}"
        - name: PROFESSEURS_SERVICE_URL
          value: "{{ .Values.services.professeurs }}"
        - name: EMPLOIS_DU_TEMPS_SERVICE_URL
          value: "{{ .Values.services.emplois_du_temps }}"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
spec:
  type: {{ .Values.service.type }} # LoadBalancer ou ClusterIP
  selector:
    app: gateway
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
